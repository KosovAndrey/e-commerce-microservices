server:
  port: ${NOTIFICATION_SERVICE_SERVER_PORT}
spring:
  data:
    mongodb:
      username: ${NOTIFICATION_SERVICE_MONGO_USERNAME}
      password: ${NOTIFICATION_SERVICE_MONGO_PASSWORD}
      host: ${NOTIFICATION_SERVICE_MONGO_HOST}
      port: ${NOTIFICATION_SERVICE_MONGO_PORT}
      database: ${NOTIFICATION_SERVICE_MONGO_DATABASE}
      authentication-database: ${NOTIFICATION_SERVICE_MONGO_AUTH_DATABASE}
  kafka:
    consumer:
      bootstrap-servers: ${NOTIFICATION_SERVICE_KAFKA_BOOTSTRAP_SERVERS}
      group-id: ${NOTIFICATION_SERVICE_KAFKA_GROUP_ID}
      auto-offset-reset: ${NOTIFICATION_SERVICE_KAFKA_AUTO_OFFSET_RESET:earliest}
      key-deserializer: ${NOTIFICATION_SERVICE_KAFKA_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
      value-deserializer: ${NOTIFICATION_SERVICE_KAFKA_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.JsonDeserializer}
      properties:
        spring.json.trusted.packages: ${NOTIFICATION_SERVICE_KAFKA_TRUSTED_PACKAGES:'*'}
        spring.json.type.mapping: ${NOTIFICATION_SERVICE_KAFKA_TYPE_MAPPING:orderConfirmation:com.kosovandrey.ecommerce.kafka.order.OrderConfirmation,paymentConfirmation:com.kosovandrey.ecommerce.kafka.payment.PaymentConfirmation}
  mail:
    host: ${NOTIFICATION_SERVICE_MAIL_HOST}
    port: ${NOTIFICATION_SERVICE_MAIL_PORT}
    username: ${NOTIFICATION_SERVICE_MAIL_USERNAME}
    password: ${NOTIFICATION_SERVICE_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          trust: ${NOTIFICATION_SERVICE_MAIL_SMTP_TRUST:"*"}
        auth: ${NOTIFICATION_SERVICE_MAIL_SMTP_AUTH:true}
        starttls:
          enabled: ${NOTIFICATION_SERVICE_MAIL_SMTP_STARTTLS_ENABLED:true}
        connectiontimeout: ${NOTIFICATION_SERVICE_MAIL_SMTP_CONNECTION_TIMEOUT:5000}
        timeout: ${NOTIFICATION_SERVICE_MAIL_SMTP_TIMEOUT:3000}
        writetimeout: ${NOTIFICATION_SERVICE_MAIL_SMTP_WRITE_TIMEOUT:5000}
